package com.bs.malware_scanner_mobile_app.presentation.topappbar

import androidx.compose.foundation.background
import androidx.compose.foundation.layout.*
import androidx.compose.foundation.shape.CircleShape
import androidx.compose.material.*
import androidx.compose.material.icons.Icons
import androidx.compose.material.icons.filled.Menu
import androidx.compose.material.icons.filled.MoreVert
import androidx.compose.material.icons.filled.Notifications
import androidx.compose.runtime.Composable
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.draw.clip
import androidx.compose.ui.draw.rotate
import androidx.compose.ui.graphics.Color
import androidx.compose.ui.res.painterResource
import androidx.compose.ui.text.font.FontWeight
import androidx.compose.ui.unit.dp
import androidx.compose.ui.unit.sp
import androidx.navigation.NavBackStackEntry
import com.bs.malware_scanner_mobile_app.R
import com.bs.malware_scanner_mobile_app.core.util.titleString
import com.bs.malware_scanner_mobile_app.presentation.Screen
import com.bs.malware_scanner_mobile_app.presentation.ui.theme.Background
import com.bs.malware_scanner_mobile_app.presentation.ui.theme.Purple200
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.launch

@Composable
fun TopBar(
    coroutineScope: CoroutineScope,
    scaffoldState: ScaffoldState,
    navBackStackEntry: NavBackStackEntry?,
) {
    TopAppBar(
        backgroundColor = Background,
        modifier = Modifier.fillMaxWidth(),
        elevation = 0.dp
    ) {
        Box(
            modifier = Modifier
                .fillMaxWidth()
        ) {
            IconButton(onClick = {
                coroutineScope.launch {
                    scaffoldState.drawerState.open()
                }
            }) {
                Icon(
                    imageVector = Icons.Filled.Menu,
                    contentDescription = "menu",
                    tint = Color.DarkGray
                )
            }
            Row(
                modifier = Modifier
                    .fillMaxWidth()
                    .align(Alignment.Center),
                verticalAlignment = Alignment.CenterVertically,
                horizontalArrangement = Arrangement.Center,
            ) {
                Icon(
                    painter = painterResource(
                        id = R.drawable.shield
                    ),
                    contentDescription = "shield",
                    tint = Purple200,
                    modifier = Modifier.size(24.dp)
                )
                Spacer(modifier = Modifier.width(8.dp))
                Text(
                    text = titleString(),
                    fontSize = 22.sp,
                    fontWeight = FontWeight.Bold,
                    color = Purple200,
                )
            }
            when (navBackStackEntry?.destination?.route) {
                Screen.DashboardScreen.route -> {
                    Box(
                        modifier = Modifier
                            .padding(end = 20.dp)
                            .align(Alignment.CenterEnd),
                    ) {
                        Icon(
                            imageVector = Icons.Default.Notifications,
                            contentDescription = "notifications",
                            tint = Color.LightGray,
                        )
                        Box(
                            modifier = Modifier
                                .size(4.dp)
                                .clip(CircleShape)
                                .background(Purple200)
                                .align(Alignment.TopEnd)
                        )
                    }
                }
                Screen.AnalyticsScreen.route -> {
                    IconButton(
                        onClick = { /*TODO*/ },
                        modifier = Modifier
                            .align(Alignment.CenterEnd)
                    ) {
                        Icon(
                            imageVector = Icons.Default.MoreVert,
                            contentDescription = "more",
                            modifier = Modifier
                                .rotate(90f),
                            tint = Color.DarkGray
                        )
                    }
                }
            }
        }
    }
}