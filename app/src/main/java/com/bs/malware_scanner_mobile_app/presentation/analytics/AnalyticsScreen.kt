package com.bs.malware_scanner_mobile_app.presentation.analytics

import androidx.compose.foundation.Image
import androidx.compose.foundation.background
import androidx.compose.foundation.clickable
import androidx.compose.foundation.layout.*
import androidx.compose.foundation.shape.CircleShape
import androidx.compose.foundation.shape.RoundedCornerShape
import androidx.compose.material.*
import androidx.compose.material.MaterialTheme.colors
import androidx.compose.material.icons.Icons
import androidx.compose.material.icons.filled.MoreVert
import androidx.compose.runtime.Composable
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.draw.clip
import androidx.compose.ui.draw.rotate
import androidx.compose.ui.graphics.Color
import androidx.compose.ui.res.painterResource
import androidx.compose.ui.text.font.FontWeight
import androidx.compose.ui.unit.dp
import androidx.compose.ui.unit.sp
import com.bs.malware_scanner_mobile_app.R
import com.bs.malware_scanner_mobile_app.presentation.Screen
import com.bs.malware_scanner_mobile_app.presentation.ui.theme.*

@Composable
fun AnalyticsScreen() {
    Column(
        modifier = Modifier.fillMaxSize()
    ) {
        ScanningNeededSection()
        Spacer(modifier = Modifier.height(10.dp))
        MalwareDetectionSection()
    }
}

@Composable
fun MalwareDetectionSection() {
    Row(
        verticalAlignment = Alignment.CenterVertically,
        horizontalArrangement = Arrangement.SpaceBetween,
        modifier = Modifier
            .fillMaxWidth()
            .padding(start = 15.dp),
    ) {
        Text(
            text = "Malware Detection",
            style = MaterialTheme.typography.h6,
            fontWeight = FontWeight.Bold,
            color = Color.DarkGray
        )
        IconButton(onClick = { /*TODO*/ }) {
            Icon(
                imageVector = Icons.Default.MoreVert,
                contentDescription = "more",
                modifier = Modifier
                    .rotate(90f),
                tint = Color.DarkGray
            )
        }
    }

    Card(
        modifier = Modifier
            .fillMaxWidth()
            .padding(
                horizontal = 10.dp, vertical = 10.dp
            ),
        shape = RoundedCornerShape(10.dp),
        backgroundColor = Color.White
    ) {
        Text(
            text = "asd\n\n\n\n\ns"
        )
    }
}

@Composable
fun ScanningNeededSection() {
    Card(
        modifier = Modifier
            .fillMaxWidth()
            .padding(20.dp),
        shape = RoundedCornerShape(20.dp),
        backgroundColor = DarkPurple,
        elevation = 1.dp
    ) {
        Row(
            modifier = Modifier.fillMaxWidth()
        ) {
            Box(
                contentAlignment = Alignment.Center
            ) {
                Box(
                    modifier = Modifier
                        .size(100.dp)
                        .clip(CircleShape)
                        .background(DeepDarkPurple)
                )
                Image(
                    painter = painterResource(id = R.drawable.cone),
                    contentDescription = "cone",
                    modifier = Modifier
                        .rotate(10f)
                        .padding(20.dp)
                        .size(100.dp)
                )
            }
            Column(
                modifier = Modifier
                    .fillMaxWidth()
                    .padding(vertical = 20.dp, horizontal = 20.dp),
                verticalArrangement = Arrangement.Center
            ) {
                Text(
                    text = "Summary Status",
                    color = Color.LightGray,
                    fontSize = 14.sp
                )
                Spacer(modifier = Modifier.height(4.dp))
                Text(
                    text = "Scanning needed!",
                    color = Color.White,
                    fontSize = 18.sp,
                    fontWeight = FontWeight.SemiBold
                )
                Spacer(modifier = Modifier.height(14.dp))
                OutlinedButton(
                    onClick = { /*TODO*/ },
                    modifier = Modifier
                        .fillMaxWidth()
                        .clip(RoundedCornerShape(30.dp)),
                    colors = ButtonDefaults.buttonColors(backgroundColor = Purple200),
                    contentPadding = PaddingValues()
                ) {
                    Text(
                        text = "Scan Now",
                        color = Color.White,
                        fontSize = 16.sp
                    )
                }
            }
        }
    }
}
